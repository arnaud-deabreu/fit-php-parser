<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\MagnetometerData\CalibratedMagX;
use FitParser\Messages\Profile\Generated\MagnetometerData\CalibratedMagY;
use FitParser\Messages\Profile\Generated\MagnetometerData\CalibratedMagZ;
use FitParser\Messages\Profile\Generated\MagnetometerData\MagX;
use FitParser\Messages\Profile\Generated\MagnetometerData\MagY;
use FitParser\Messages\Profile\Generated\MagnetometerData\MagZ;
use FitParser\Messages\Profile\Generated\MagnetometerData\SampleTimeOffset;
use FitParser\Messages\Profile\Generated\MagnetometerData\Timestamp;
use FitParser\Messages\Profile\Generated\MagnetometerData\TimestampMs;
use FitParser\Messages\Profile\MessageInterface;

final readonly class MagnetometerData implements MessageInterface
{
    private function __construct(
        public Timestamp $timestamp,
        public TimestampMs $timestampMs,
        public SampleTimeOffset $sampleTimeOffset,
        public MagX $magX,
        public MagY $magY,
        public MagZ $magZ,
        public CalibratedMagX $calibratedMagX,
        public CalibratedMagY $calibratedMagY,
        public CalibratedMagZ $calibratedMagZ,
    ) {}

    public static function create(): self
    {
        return new self(
            new Timestamp(),
            new TimestampMs(),
            new SampleTimeOffset(),
            new MagX(),
            new MagY(),
            new MagZ(),
            new CalibratedMagX(),
            new CalibratedMagY(),
            new CalibratedMagZ(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
