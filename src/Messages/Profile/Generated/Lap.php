<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\Lap\AvgAltitude;
use FitParser\Messages\Profile\Generated\Lap\AvgCadence;
use FitParser\Messages\Profile\Generated\Lap\AvgCadencePosition;
use FitParser\Messages\Profile\Generated\Lap\AvgCombinedPedalSmoothness;
use FitParser\Messages\Profile\Generated\Lap\AvgCoreTemperature;
use FitParser\Messages\Profile\Generated\Lap\AvgDepth;
use FitParser\Messages\Profile\Generated\Lap\AvgFlow;
use FitParser\Messages\Profile\Generated\Lap\AvgFractionalCadence;
use FitParser\Messages\Profile\Generated\Lap\AvgGrade;
use FitParser\Messages\Profile\Generated\Lap\AvgGrit;
use FitParser\Messages\Profile\Generated\Lap\AvgHeartRate;
use FitParser\Messages\Profile\Generated\Lap\AvgLeftPco;
use FitParser\Messages\Profile\Generated\Lap\AvgLeftPedalSmoothness;
use FitParser\Messages\Profile\Generated\Lap\AvgLeftPowerPhase;
use FitParser\Messages\Profile\Generated\Lap\AvgLeftPowerPhasePeak;
use FitParser\Messages\Profile\Generated\Lap\AvgLeftTorqueEffectiveness;
use FitParser\Messages\Profile\Generated\Lap\AvgLevMotorPower;
use FitParser\Messages\Profile\Generated\Lap\AvgNegGrade;
use FitParser\Messages\Profile\Generated\Lap\AvgNegVerticalSpeed;
use FitParser\Messages\Profile\Generated\Lap\AvgPosGrade;
use FitParser\Messages\Profile\Generated\Lap\AvgPosVerticalSpeed;
use FitParser\Messages\Profile\Generated\Lap\AvgPower;
use FitParser\Messages\Profile\Generated\Lap\AvgPowerPosition;
use FitParser\Messages\Profile\Generated\Lap\AvgRespirationRate;
use FitParser\Messages\Profile\Generated\Lap\AvgRightPco;
use FitParser\Messages\Profile\Generated\Lap\AvgRightPedalSmoothness;
use FitParser\Messages\Profile\Generated\Lap\AvgRightPowerPhase;
use FitParser\Messages\Profile\Generated\Lap\AvgRightPowerPhasePeak;
use FitParser\Messages\Profile\Generated\Lap\AvgRightTorqueEffectiveness;
use FitParser\Messages\Profile\Generated\Lap\AvgSaturatedHemoglobinPercent;
use FitParser\Messages\Profile\Generated\Lap\AvgSpeed;
use FitParser\Messages\Profile\Generated\Lap\AvgStanceTime;
use FitParser\Messages\Profile\Generated\Lap\AvgStanceTimeBalance;
use FitParser\Messages\Profile\Generated\Lap\AvgStanceTimePercent;
use FitParser\Messages\Profile\Generated\Lap\AvgStepLength;
use FitParser\Messages\Profile\Generated\Lap\AvgStrokeDistance;
use FitParser\Messages\Profile\Generated\Lap\AvgTemperature;
use FitParser\Messages\Profile\Generated\Lap\AvgTotalHemoglobinConc;
use FitParser\Messages\Profile\Generated\Lap\AvgVam;
use FitParser\Messages\Profile\Generated\Lap\AvgVerticalOscillation;
use FitParser\Messages\Profile\Generated\Lap\AvgVerticalRatio;
use FitParser\Messages\Profile\Generated\Lap\EndPositionLat;
use FitParser\Messages\Profile\Generated\Lap\EndPositionLong;
use FitParser\Messages\Profile\Generated\Lap\EnhancedAvgAltitude;
use FitParser\Messages\Profile\Generated\Lap\EnhancedAvgRespirationRate;
use FitParser\Messages\Profile\Generated\Lap\EnhancedAvgSpeed;
use FitParser\Messages\Profile\Generated\Lap\EnhancedMaxAltitude;
use FitParser\Messages\Profile\Generated\Lap\EnhancedMaxRespirationRate;
use FitParser\Messages\Profile\Generated\Lap\EnhancedMaxSpeed;
use FitParser\Messages\Profile\Generated\Lap\EnhancedMinAltitude;
use FitParser\Messages\Profile\Generated\Lap\Event;
use FitParser\Messages\Profile\Generated\Lap\EventGroup;
use FitParser\Messages\Profile\Generated\Lap\EventType;
use FitParser\Messages\Profile\Generated\Lap\FirstLengthIndex;
use FitParser\Messages\Profile\Generated\Lap\GpsAccuracy;
use FitParser\Messages\Profile\Generated\Lap\Intensity;
use FitParser\Messages\Profile\Generated\Lap\JumpCount;
use FitParser\Messages\Profile\Generated\Lap\LapTrigger;
use FitParser\Messages\Profile\Generated\Lap\LeftRightBalance;
use FitParser\Messages\Profile\Generated\Lap\LevBatteryConsumption;
use FitParser\Messages\Profile\Generated\Lap\MaxAltitude;
use FitParser\Messages\Profile\Generated\Lap\MaxCadence;
use FitParser\Messages\Profile\Generated\Lap\MaxCadencePosition;
use FitParser\Messages\Profile\Generated\Lap\MaxCoreTemperature;
use FitParser\Messages\Profile\Generated\Lap\MaxDepth;
use FitParser\Messages\Profile\Generated\Lap\MaxFractionalCadence;
use FitParser\Messages\Profile\Generated\Lap\MaxHeartRate;
use FitParser\Messages\Profile\Generated\Lap\MaxLevMotorPower;
use FitParser\Messages\Profile\Generated\Lap\MaxNegGrade;
use FitParser\Messages\Profile\Generated\Lap\MaxNegVerticalSpeed;
use FitParser\Messages\Profile\Generated\Lap\MaxPosGrade;
use FitParser\Messages\Profile\Generated\Lap\MaxPosVerticalSpeed;
use FitParser\Messages\Profile\Generated\Lap\MaxPower;
use FitParser\Messages\Profile\Generated\Lap\MaxPowerPosition;
use FitParser\Messages\Profile\Generated\Lap\MaxRespirationRate;
use FitParser\Messages\Profile\Generated\Lap\MaxSaturatedHemoglobinPercent;
use FitParser\Messages\Profile\Generated\Lap\MaxSpeed;
use FitParser\Messages\Profile\Generated\Lap\MaxTemperature;
use FitParser\Messages\Profile\Generated\Lap\MaxTotalHemoglobinConc;
use FitParser\Messages\Profile\Generated\Lap\MessageIndex;
use FitParser\Messages\Profile\Generated\Lap\MinAltitude;
use FitParser\Messages\Profile\Generated\Lap\MinCoreTemperature;
use FitParser\Messages\Profile\Generated\Lap\MinHeartRate;
use FitParser\Messages\Profile\Generated\Lap\MinSaturatedHemoglobinPercent;
use FitParser\Messages\Profile\Generated\Lap\MinTemperature;
use FitParser\Messages\Profile\Generated\Lap\MinTotalHemoglobinConc;
use FitParser\Messages\Profile\Generated\Lap\NormalizedPower;
use FitParser\Messages\Profile\Generated\Lap\NumActiveLengths;
use FitParser\Messages\Profile\Generated\Lap\NumLengths;
use FitParser\Messages\Profile\Generated\Lap\OpponentScore;
use FitParser\Messages\Profile\Generated\Lap\PlayerScore;
use FitParser\Messages\Profile\Generated\Lap\RepetitionNum;
use FitParser\Messages\Profile\Generated\Lap\Sport;
use FitParser\Messages\Profile\Generated\Lap\StandCount;
use FitParser\Messages\Profile\Generated\Lap\StartPositionLat;
use FitParser\Messages\Profile\Generated\Lap\StartPositionLong;
use FitParser\Messages\Profile\Generated\Lap\StartTime;
use FitParser\Messages\Profile\Generated\Lap\StrokeCount;
use FitParser\Messages\Profile\Generated\Lap\SubSport;
use FitParser\Messages\Profile\Generated\Lap\SwimStroke;
use FitParser\Messages\Profile\Generated\Lap\TimeInCadenceZone;
use FitParser\Messages\Profile\Generated\Lap\TimeInHrZone;
use FitParser\Messages\Profile\Generated\Lap\TimeInPowerZone;
use FitParser\Messages\Profile\Generated\Lap\TimeInSpeedZone;
use FitParser\Messages\Profile\Generated\Lap\Timestamp;
use FitParser\Messages\Profile\Generated\Lap\TimeStanding;
use FitParser\Messages\Profile\Generated\Lap\TotalAscent;
use FitParser\Messages\Profile\Generated\Lap\TotalCalories;
use FitParser\Messages\Profile\Generated\Lap\TotalCycles;
use FitParser\Messages\Profile\Generated\Lap\TotalDescent;
use FitParser\Messages\Profile\Generated\Lap\TotalDistance;
use FitParser\Messages\Profile\Generated\Lap\TotalElapsedTime;
use FitParser\Messages\Profile\Generated\Lap\TotalFatCalories;
use FitParser\Messages\Profile\Generated\Lap\TotalFlow;
use FitParser\Messages\Profile\Generated\Lap\TotalFractionalAscent;
use FitParser\Messages\Profile\Generated\Lap\TotalFractionalCycles;
use FitParser\Messages\Profile\Generated\Lap\TotalFractionalDescent;
use FitParser\Messages\Profile\Generated\Lap\TotalGrit;
use FitParser\Messages\Profile\Generated\Lap\TotalMovingTime;
use FitParser\Messages\Profile\Generated\Lap\TotalTimerTime;
use FitParser\Messages\Profile\Generated\Lap\TotalWork;
use FitParser\Messages\Profile\Generated\Lap\WktStepIndex;
use FitParser\Messages\Profile\Generated\Lap\ZoneCount;
use FitParser\Messages\Profile\MessageInterface;

final readonly class Lap implements MessageInterface
{
    private function __construct(
        public MessageIndex $messageIndex,
        public Timestamp $timestamp,
        public Event $event,
        public EventType $eventType,
        public StartTime $startTime,
        public StartPositionLat $startPositionLat,
        public StartPositionLong $startPositionLong,
        public EndPositionLat $endPositionLat,
        public EndPositionLong $endPositionLong,
        public TotalElapsedTime $totalElapsedTime,
        public TotalTimerTime $totalTimerTime,
        public TotalDistance $totalDistance,
        public TotalCycles $totalCycles,
        public TotalCalories $totalCalories,
        public TotalFatCalories $totalFatCalories,
        public AvgSpeed $avgSpeed,
        public MaxSpeed $maxSpeed,
        public AvgHeartRate $avgHeartRate,
        public MaxHeartRate $maxHeartRate,
        public AvgCadence $avgCadence,
        public MaxCadence $maxCadence,
        public AvgPower $avgPower,
        public MaxPower $maxPower,
        public TotalAscent $totalAscent,
        public TotalDescent $totalDescent,
        public Intensity $intensity,
        public LapTrigger $lapTrigger,
        public Sport $sport,
        public EventGroup $eventGroup,
        public NumLengths $numLengths,
        public NormalizedPower $normalizedPower,
        public LeftRightBalance $leftRightBalance,
        public FirstLengthIndex $firstLengthIndex,
        public AvgStrokeDistance $avgStrokeDistance,
        public SwimStroke $swimStroke,
        public SubSport $subSport,
        public NumActiveLengths $numActiveLengths,
        public TotalWork $totalWork,
        public AvgAltitude $avgAltitude,
        public MaxAltitude $maxAltitude,
        public GpsAccuracy $gpsAccuracy,
        public AvgGrade $avgGrade,
        public AvgPosGrade $avgPosGrade,
        public AvgNegGrade $avgNegGrade,
        public MaxPosGrade $maxPosGrade,
        public MaxNegGrade $maxNegGrade,
        public AvgTemperature $avgTemperature,
        public MaxTemperature $maxTemperature,
        public TotalMovingTime $totalMovingTime,
        public AvgPosVerticalSpeed $avgPosVerticalSpeed,
        public AvgNegVerticalSpeed $avgNegVerticalSpeed,
        public MaxPosVerticalSpeed $maxPosVerticalSpeed,
        public MaxNegVerticalSpeed $maxNegVerticalSpeed,
        public TimeInHrZone $timeInHrZone,
        public TimeInSpeedZone $timeInSpeedZone,
        public TimeInCadenceZone $timeInCadenceZone,
        public TimeInPowerZone $timeInPowerZone,
        public RepetitionNum $repetitionNum,
        public MinAltitude $minAltitude,
        public MinHeartRate $minHeartRate,
        public WktStepIndex $wktStepIndex,
        public OpponentScore $opponentScore,
        public StrokeCount $strokeCount,
        public ZoneCount $zoneCount,
        public AvgVerticalOscillation $avgVerticalOscillation,
        public AvgStanceTimePercent $avgStanceTimePercent,
        public AvgStanceTime $avgStanceTime,
        public AvgFractionalCadence $avgFractionalCadence,
        public MaxFractionalCadence $maxFractionalCadence,
        public TotalFractionalCycles $totalFractionalCycles,
        public PlayerScore $playerScore,
        public AvgTotalHemoglobinConc $avgTotalHemoglobinConc,
        public MinTotalHemoglobinConc $minTotalHemoglobinConc,
        public MaxTotalHemoglobinConc $maxTotalHemoglobinConc,
        public AvgSaturatedHemoglobinPercent $avgSaturatedHemoglobinPercent,
        public MinSaturatedHemoglobinPercent $minSaturatedHemoglobinPercent,
        public MaxSaturatedHemoglobinPercent $maxSaturatedHemoglobinPercent,
        public AvgLeftTorqueEffectiveness $avgLeftTorqueEffectiveness,
        public AvgRightTorqueEffectiveness $avgRightTorqueEffectiveness,
        public AvgLeftPedalSmoothness $avgLeftPedalSmoothness,
        public AvgRightPedalSmoothness $avgRightPedalSmoothness,
        public AvgCombinedPedalSmoothness $avgCombinedPedalSmoothness,
        public TimeStanding $timeStanding,
        public StandCount $standCount,
        public AvgLeftPco $avgLeftPco,
        public AvgRightPco $avgRightPco,
        public AvgLeftPowerPhase $avgLeftPowerPhase,
        public AvgLeftPowerPhasePeak $avgLeftPowerPhasePeak,
        public AvgRightPowerPhase $avgRightPowerPhase,
        public AvgRightPowerPhasePeak $avgRightPowerPhasePeak,
        public AvgPowerPosition $avgPowerPosition,
        public MaxPowerPosition $maxPowerPosition,
        public AvgCadencePosition $avgCadencePosition,
        public MaxCadencePosition $maxCadencePosition,
        public EnhancedAvgSpeed $enhancedAvgSpeed,
        public EnhancedMaxSpeed $enhancedMaxSpeed,
        public EnhancedAvgAltitude $enhancedAvgAltitude,
        public EnhancedMinAltitude $enhancedMinAltitude,
        public EnhancedMaxAltitude $enhancedMaxAltitude,
        public AvgLevMotorPower $avgLevMotorPower,
        public MaxLevMotorPower $maxLevMotorPower,
        public LevBatteryConsumption $levBatteryConsumption,
        public AvgVerticalRatio $avgVerticalRatio,
        public AvgStanceTimeBalance $avgStanceTimeBalance,
        public AvgStepLength $avgStepLength,
        public AvgVam $avgVam,
        public AvgDepth $avgDepth,
        public MaxDepth $maxDepth,
        public MinTemperature $minTemperature,
        public EnhancedAvgRespirationRate $enhancedAvgRespirationRate,
        public EnhancedMaxRespirationRate $enhancedMaxRespirationRate,
        public AvgRespirationRate $avgRespirationRate,
        public MaxRespirationRate $maxRespirationRate,
        public TotalGrit $totalGrit,
        public TotalFlow $totalFlow,
        public JumpCount $jumpCount,
        public AvgGrit $avgGrit,
        public AvgFlow $avgFlow,
        public TotalFractionalAscent $totalFractionalAscent,
        public TotalFractionalDescent $totalFractionalDescent,
        public AvgCoreTemperature $avgCoreTemperature,
        public MinCoreTemperature $minCoreTemperature,
        public MaxCoreTemperature $maxCoreTemperature,
    ) {}

    public static function create(): self
    {
        return new self(
            new MessageIndex(),
            new Timestamp(),
            new Event(),
            new EventType(),
            new StartTime(),
            new StartPositionLat(),
            new StartPositionLong(),
            new EndPositionLat(),
            new EndPositionLong(),
            new TotalElapsedTime(),
            new TotalTimerTime(),
            new TotalDistance(),
            new TotalCycles(),
            new TotalCalories(),
            new TotalFatCalories(),
            new AvgSpeed(),
            new MaxSpeed(),
            new AvgHeartRate(),
            new MaxHeartRate(),
            new AvgCadence(),
            new MaxCadence(),
            new AvgPower(),
            new MaxPower(),
            new TotalAscent(),
            new TotalDescent(),
            new Intensity(),
            new LapTrigger(),
            new Sport(),
            new EventGroup(),
            new NumLengths(),
            new NormalizedPower(),
            new LeftRightBalance(),
            new FirstLengthIndex(),
            new AvgStrokeDistance(),
            new SwimStroke(),
            new SubSport(),
            new NumActiveLengths(),
            new TotalWork(),
            new AvgAltitude(),
            new MaxAltitude(),
            new GpsAccuracy(),
            new AvgGrade(),
            new AvgPosGrade(),
            new AvgNegGrade(),
            new MaxPosGrade(),
            new MaxNegGrade(),
            new AvgTemperature(),
            new MaxTemperature(),
            new TotalMovingTime(),
            new AvgPosVerticalSpeed(),
            new AvgNegVerticalSpeed(),
            new MaxPosVerticalSpeed(),
            new MaxNegVerticalSpeed(),
            new TimeInHrZone(),
            new TimeInSpeedZone(),
            new TimeInCadenceZone(),
            new TimeInPowerZone(),
            new RepetitionNum(),
            new MinAltitude(),
            new MinHeartRate(),
            new WktStepIndex(),
            new OpponentScore(),
            new StrokeCount(),
            new ZoneCount(),
            new AvgVerticalOscillation(),
            new AvgStanceTimePercent(),
            new AvgStanceTime(),
            new AvgFractionalCadence(),
            new MaxFractionalCadence(),
            new TotalFractionalCycles(),
            new PlayerScore(),
            new AvgTotalHemoglobinConc(),
            new MinTotalHemoglobinConc(),
            new MaxTotalHemoglobinConc(),
            new AvgSaturatedHemoglobinPercent(),
            new MinSaturatedHemoglobinPercent(),
            new MaxSaturatedHemoglobinPercent(),
            new AvgLeftTorqueEffectiveness(),
            new AvgRightTorqueEffectiveness(),
            new AvgLeftPedalSmoothness(),
            new AvgRightPedalSmoothness(),
            new AvgCombinedPedalSmoothness(),
            new TimeStanding(),
            new StandCount(),
            new AvgLeftPco(),
            new AvgRightPco(),
            new AvgLeftPowerPhase(),
            new AvgLeftPowerPhasePeak(),
            new AvgRightPowerPhase(),
            new AvgRightPowerPhasePeak(),
            new AvgPowerPosition(),
            new MaxPowerPosition(),
            new AvgCadencePosition(),
            new MaxCadencePosition(),
            new EnhancedAvgSpeed(),
            new EnhancedMaxSpeed(),
            new EnhancedAvgAltitude(),
            new EnhancedMinAltitude(),
            new EnhancedMaxAltitude(),
            new AvgLevMotorPower(),
            new MaxLevMotorPower(),
            new LevBatteryConsumption(),
            new AvgVerticalRatio(),
            new AvgStanceTimeBalance(),
            new AvgStepLength(),
            new AvgVam(),
            new AvgDepth(),
            new MaxDepth(),
            new MinTemperature(),
            new EnhancedAvgRespirationRate(),
            new EnhancedMaxRespirationRate(),
            new AvgRespirationRate(),
            new MaxRespirationRate(),
            new TotalGrit(),
            new TotalFlow(),
            new JumpCount(),
            new AvgGrit(),
            new AvgFlow(),
            new TotalFractionalAscent(),
            new TotalFractionalDescent(),
            new AvgCoreTemperature(),
            new MinCoreTemperature(),
            new MaxCoreTemperature(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
