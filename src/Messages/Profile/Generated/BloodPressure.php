<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\BloodPressure\DiastolicPressure;
use FitParser\Messages\Profile\Generated\BloodPressure\HeartRate;
use FitParser\Messages\Profile\Generated\BloodPressure\HeartRateType;
use FitParser\Messages\Profile\Generated\BloodPressure\Map3SampleMean;
use FitParser\Messages\Profile\Generated\BloodPressure\MapEveningValues;
use FitParser\Messages\Profile\Generated\BloodPressure\MapMorningValues;
use FitParser\Messages\Profile\Generated\BloodPressure\MeanArterialPressure;
use FitParser\Messages\Profile\Generated\BloodPressure\Status;
use FitParser\Messages\Profile\Generated\BloodPressure\SystolicPressure;
use FitParser\Messages\Profile\Generated\BloodPressure\Timestamp;
use FitParser\Messages\Profile\Generated\BloodPressure\UserProfileIndex;
use FitParser\Messages\Profile\MessageInterface;

final readonly class BloodPressure implements MessageInterface
{
    private function __construct(
        public Timestamp $timestamp,
        public SystolicPressure $systolicPressure,
        public DiastolicPressure $diastolicPressure,
        public MeanArterialPressure $meanArterialPressure,
        public Map3SampleMean $map3SampleMean,
        public MapMorningValues $mapMorningValues,
        public MapEveningValues $mapEveningValues,
        public HeartRate $heartRate,
        public HeartRateType $heartRateType,
        public Status $status,
        public UserProfileIndex $userProfileIndex,
    ) {
    }

    public static function create(): self
    {
        return new self(
            new Timestamp(),
            new SystolicPressure(),
            new DiastolicPressure(),
            new MeanArterialPressure(),
            new Map3SampleMean(),
            new MapMorningValues(),
            new MapEveningValues(),
            new HeartRate(),
            new HeartRateType(),
            new Status(),
            new UserProfileIndex(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
