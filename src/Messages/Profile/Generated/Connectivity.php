<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\Connectivity\AntEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\AutoActivityUploadEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\BluetoothEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\BluetoothLeEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\CourseDownloadEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\GpsEphemerisDownloadEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\GrouptrackEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\IncidentDetectionEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\LiveTrackingEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\Name;
use FitParser\Messages\Profile\Generated\Connectivity\WeatherAlertsEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\WeatherConditionsEnabled;
use FitParser\Messages\Profile\Generated\Connectivity\WorkoutDownloadEnabled;
use FitParser\Messages\Profile\MessageInterface;

final readonly class Connectivity implements MessageInterface
{
    private function __construct(
        public BluetoothEnabled $bluetoothEnabled,
        public BluetoothLeEnabled $bluetoothLeEnabled,
        public AntEnabled $antEnabled,
        public Name $name,
        public LiveTrackingEnabled $liveTrackingEnabled,
        public WeatherConditionsEnabled $weatherConditionsEnabled,
        public WeatherAlertsEnabled $weatherAlertsEnabled,
        public AutoActivityUploadEnabled $autoActivityUploadEnabled,
        public CourseDownloadEnabled $courseDownloadEnabled,
        public WorkoutDownloadEnabled $workoutDownloadEnabled,
        public GpsEphemerisDownloadEnabled $gpsEphemerisDownloadEnabled,
        public IncidentDetectionEnabled $incidentDetectionEnabled,
        public GrouptrackEnabled $grouptrackEnabled,
    ) {
    }

    public static function create(): self
    {
        return new self(
            new BluetoothEnabled(),
            new BluetoothLeEnabled(),
            new AntEnabled(),
            new Name(),
            new LiveTrackingEnabled(),
            new WeatherConditionsEnabled(),
            new WeatherAlertsEnabled(),
            new AutoActivityUploadEnabled(),
            new CourseDownloadEnabled(),
            new WorkoutDownloadEnabled(),
            new GpsEphemerisDownloadEnabled(),
            new IncidentDetectionEnabled(),
            new GrouptrackEnabled(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
