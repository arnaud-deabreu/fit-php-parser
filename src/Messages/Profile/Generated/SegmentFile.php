<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\SegmentFile\DefaultRaceLeader;
use FitParser\Messages\Profile\Generated\SegmentFile\Enabled;
use FitParser\Messages\Profile\Generated\SegmentFile\FileUuid;
use FitParser\Messages\Profile\Generated\SegmentFile\LeaderActivityId;
use FitParser\Messages\Profile\Generated\SegmentFile\LeaderActivityIdString;
use FitParser\Messages\Profile\Generated\SegmentFile\LeaderGroupPrimaryKey;
use FitParser\Messages\Profile\Generated\SegmentFile\LeaderType;
use FitParser\Messages\Profile\Generated\SegmentFile\MessageIndex;
use FitParser\Messages\Profile\Generated\SegmentFile\UserProfilePrimaryKey;
use FitParser\Messages\Profile\MessageInterface;

final readonly class SegmentFile implements MessageInterface
{
    private function __construct(
        public MessageIndex $messageIndex,
        public FileUuid $fileUuid,
        public Enabled $enabled,
        public UserProfilePrimaryKey $userProfilePrimaryKey,
        public LeaderType $leaderType,
        public LeaderGroupPrimaryKey $leaderGroupPrimaryKey,
        public LeaderActivityId $leaderActivityId,
        public LeaderActivityIdString $leaderActivityIdString,
        public DefaultRaceLeader $defaultRaceLeader,
    ) {
    }

    public static function create(): self
    {
        return new self(
            new MessageIndex(),
            new FileUuid(),
            new Enabled(),
            new UserProfilePrimaryKey(),
            new LeaderType(),
            new LeaderGroupPrimaryKey(),
            new LeaderActivityId(),
            new LeaderActivityIdString(),
            new DefaultRaceLeader(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
