<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\ChronoShotSession\AvgSpeed;
use FitParser\Messages\Profile\Generated\ChronoShotSession\GrainWeight;
use FitParser\Messages\Profile\Generated\ChronoShotSession\MaxSpeed;
use FitParser\Messages\Profile\Generated\ChronoShotSession\MinSpeed;
use FitParser\Messages\Profile\Generated\ChronoShotSession\ProjectileType;
use FitParser\Messages\Profile\Generated\ChronoShotSession\ShotCount;
use FitParser\Messages\Profile\Generated\ChronoShotSession\Timestamp;
use FitParser\Messages\Profile\MessageInterface;

final readonly class ChronoShotSession implements MessageInterface
{
    private function __construct(
        public Timestamp $timestamp,
        public MinSpeed $minSpeed,
        public MaxSpeed $maxSpeed,
        public AvgSpeed $avgSpeed,
        public ShotCount $shotCount,
        public ProjectileType $projectileType,
        public GrainWeight $grainWeight,
    ) {}

    public static function create(): self
    {
        return new self(
            new Timestamp(),
            new MinSpeed(),
            new MaxSpeed(),
            new AvgSpeed(),
            new ShotCount(),
            new ProjectileType(),
            new GrainWeight(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
