<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\SplitSummary\AvgHeartRate;
use FitParser\Messages\Profile\Generated\SplitSummary\AvgSpeed;
use FitParser\Messages\Profile\Generated\SplitSummary\AvgVertSpeed;
use FitParser\Messages\Profile\Generated\SplitSummary\MaxHeartRate;
use FitParser\Messages\Profile\Generated\SplitSummary\MaxSpeed;
use FitParser\Messages\Profile\Generated\SplitSummary\MessageIndex;
use FitParser\Messages\Profile\Generated\SplitSummary\NumSplits;
use FitParser\Messages\Profile\Generated\SplitSummary\SplitType;
use FitParser\Messages\Profile\Generated\SplitSummary\TotalAscent;
use FitParser\Messages\Profile\Generated\SplitSummary\TotalCalories;
use FitParser\Messages\Profile\Generated\SplitSummary\TotalDescent;
use FitParser\Messages\Profile\Generated\SplitSummary\TotalDistance;
use FitParser\Messages\Profile\Generated\SplitSummary\TotalMovingTime;
use FitParser\Messages\Profile\Generated\SplitSummary\TotalTimerTime;
use FitParser\Messages\Profile\MessageInterface;

final readonly class SplitSummary implements MessageInterface
{
    private function __construct(
        public MessageIndex $messageIndex,
        public SplitType $splitType,
        public NumSplits $numSplits,
        public TotalTimerTime $totalTimerTime,
        public TotalDistance $totalDistance,
        public AvgSpeed $avgSpeed,
        public MaxSpeed $maxSpeed,
        public TotalAscent $totalAscent,
        public TotalDescent $totalDescent,
        public AvgHeartRate $avgHeartRate,
        public MaxHeartRate $maxHeartRate,
        public AvgVertSpeed $avgVertSpeed,
        public TotalCalories $totalCalories,
        public TotalMovingTime $totalMovingTime,
    ) {
    }

    public static function create(): self
    {
        return new self(
            new MessageIndex(),
            new SplitType(),
            new NumSplits(),
            new TotalTimerTime(),
            new TotalDistance(),
            new AvgSpeed(),
            new MaxSpeed(),
            new TotalAscent(),
            new TotalDescent(),
            new AvgHeartRate(),
            new MaxHeartRate(),
            new AvgVertSpeed(),
            new TotalCalories(),
            new TotalMovingTime(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
