<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\WeightScale\ActiveMet;
use FitParser\Messages\Profile\Generated\WeightScale\BasalMet;
use FitParser\Messages\Profile\Generated\WeightScale\Bmi;
use FitParser\Messages\Profile\Generated\WeightScale\BoneMass;
use FitParser\Messages\Profile\Generated\WeightScale\MetabolicAge;
use FitParser\Messages\Profile\Generated\WeightScale\MuscleMass;
use FitParser\Messages\Profile\Generated\WeightScale\PercentFat;
use FitParser\Messages\Profile\Generated\WeightScale\PercentHydration;
use FitParser\Messages\Profile\Generated\WeightScale\PhysiqueRating;
use FitParser\Messages\Profile\Generated\WeightScale\Timestamp;
use FitParser\Messages\Profile\Generated\WeightScale\UserProfileIndex;
use FitParser\Messages\Profile\Generated\WeightScale\VisceralFatMass;
use FitParser\Messages\Profile\Generated\WeightScale\VisceralFatRating;
use FitParser\Messages\Profile\Generated\WeightScale\Weight;
use FitParser\Messages\Profile\MessageInterface;

final readonly class WeightScale implements MessageInterface
{
    private function __construct(
        public Timestamp $timestamp,
        public Weight $weight,
        public PercentFat $percentFat,
        public PercentHydration $percentHydration,
        public VisceralFatMass $visceralFatMass,
        public BoneMass $boneMass,
        public MuscleMass $muscleMass,
        public BasalMet $basalMet,
        public PhysiqueRating $physiqueRating,
        public ActiveMet $activeMet,
        public MetabolicAge $metabolicAge,
        public VisceralFatRating $visceralFatRating,
        public UserProfileIndex $userProfileIndex,
        public Bmi $bmi,
    ) {
    }

    public static function create(): self
    {
        return new self(
            new Timestamp(),
            new Weight(),
            new PercentFat(),
            new PercentHydration(),
            new VisceralFatMass(),
            new BoneMass(),
            new MuscleMass(),
            new BasalMet(),
            new PhysiqueRating(),
            new ActiveMet(),
            new MetabolicAge(),
            new VisceralFatRating(),
            new UserProfileIndex(),
            new Bmi(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
