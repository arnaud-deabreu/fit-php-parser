<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\DiveAlarm\AlarmType;
use FitParser\Messages\Profile\Generated\DiveAlarm\Depth;
use FitParser\Messages\Profile\Generated\DiveAlarm\DiveTypes;
use FitParser\Messages\Profile\Generated\DiveAlarm\Enabled;
use FitParser\Messages\Profile\Generated\DiveAlarm\Id;
use FitParser\Messages\Profile\Generated\DiveAlarm\MessageIndex;
use FitParser\Messages\Profile\Generated\DiveAlarm\PopupEnabled;
use FitParser\Messages\Profile\Generated\DiveAlarm\Repeating;
use FitParser\Messages\Profile\Generated\DiveAlarm\Sound;
use FitParser\Messages\Profile\Generated\DiveAlarm\Speed;
use FitParser\Messages\Profile\Generated\DiveAlarm\Time;
use FitParser\Messages\Profile\Generated\DiveAlarm\TriggerOnAscent;
use FitParser\Messages\Profile\Generated\DiveAlarm\TriggerOnDescent;
use FitParser\Messages\Profile\MessageInterface;

final readonly class DiveAlarm implements MessageInterface
{
    private function __construct(
        public MessageIndex $messageIndex,
        public Depth $depth,
        public Time $time,
        public Enabled $enabled,
        public AlarmType $alarmType,
        public Sound $sound,
        public DiveTypes $diveTypes,
        public Id $id,
        public PopupEnabled $popupEnabled,
        public TriggerOnDescent $triggerOnDescent,
        public TriggerOnAscent $triggerOnAscent,
        public Repeating $repeating,
        public Speed $speed,
    ) {
    }

    public static function create(): self
    {
        return new self(
            new MessageIndex(),
            new Depth(),
            new Time(),
            new Enabled(),
            new AlarmType(),
            new Sound(),
            new DiveTypes(),
            new Id(),
            new PopupEnabled(),
            new TriggerOnDescent(),
            new TriggerOnAscent(),
            new Repeating(),
            new Speed(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
