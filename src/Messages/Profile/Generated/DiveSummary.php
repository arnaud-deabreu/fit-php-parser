<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Messages\Profile\Generated;

use FitParser\Messages\Profile\FieldInterface;
use FitParser\Messages\Profile\Generated\DiveSummary\AscentTime;
use FitParser\Messages\Profile\Generated\DiveSummary\AvgAscentRate;
use FitParser\Messages\Profile\Generated\DiveSummary\AvgDepth;
use FitParser\Messages\Profile\Generated\DiveSummary\AvgDescentRate;
use FitParser\Messages\Profile\Generated\DiveSummary\AvgPressureSac;
use FitParser\Messages\Profile\Generated\DiveSummary\AvgRmv;
use FitParser\Messages\Profile\Generated\DiveSummary\AvgVolumeSac;
use FitParser\Messages\Profile\Generated\DiveSummary\BottomTime;
use FitParser\Messages\Profile\Generated\DiveSummary\DescentTime;
use FitParser\Messages\Profile\Generated\DiveSummary\DiveNumber;
use FitParser\Messages\Profile\Generated\DiveSummary\EndCns;
use FitParser\Messages\Profile\Generated\DiveSummary\EndN2;
use FitParser\Messages\Profile\Generated\DiveSummary\HangTime;
use FitParser\Messages\Profile\Generated\DiveSummary\MaxAscentRate;
use FitParser\Messages\Profile\Generated\DiveSummary\MaxDepth;
use FitParser\Messages\Profile\Generated\DiveSummary\MaxDescentRate;
use FitParser\Messages\Profile\Generated\DiveSummary\O2Toxicity;
use FitParser\Messages\Profile\Generated\DiveSummary\ReferenceIndex;
use FitParser\Messages\Profile\Generated\DiveSummary\ReferenceMesg;
use FitParser\Messages\Profile\Generated\DiveSummary\StartCns;
use FitParser\Messages\Profile\Generated\DiveSummary\StartN2;
use FitParser\Messages\Profile\Generated\DiveSummary\SurfaceInterval;
use FitParser\Messages\Profile\Generated\DiveSummary\Timestamp;
use FitParser\Messages\Profile\MessageInterface;

final readonly class DiveSummary implements MessageInterface
{
    private function __construct(
        public Timestamp $timestamp,
        public ReferenceMesg $referenceMesg,
        public ReferenceIndex $referenceIndex,
        public AvgDepth $avgDepth,
        public MaxDepth $maxDepth,
        public SurfaceInterval $surfaceInterval,
        public StartCns $startCns,
        public EndCns $endCns,
        public StartN2 $startN2,
        public EndN2 $endN2,
        public O2Toxicity $o2Toxicity,
        public DiveNumber $diveNumber,
        public BottomTime $bottomTime,
        public AvgPressureSac $avgPressureSac,
        public AvgVolumeSac $avgVolumeSac,
        public AvgRmv $avgRmv,
        public DescentTime $descentTime,
        public AscentTime $ascentTime,
        public AvgAscentRate $avgAscentRate,
        public AvgDescentRate $avgDescentRate,
        public MaxAscentRate $maxAscentRate,
        public MaxDescentRate $maxDescentRate,
        public HangTime $hangTime,
    ) {
    }

    public static function create(): self
    {
        return new self(
            new Timestamp(),
            new ReferenceMesg(),
            new ReferenceIndex(),
            new AvgDepth(),
            new MaxDepth(),
            new SurfaceInterval(),
            new StartCns(),
            new EndCns(),
            new StartN2(),
            new EndN2(),
            new O2Toxicity(),
            new DiveNumber(),
            new BottomTime(),
            new AvgPressureSac(),
            new AvgVolumeSac(),
            new AvgRmv(),
            new DescentTime(),
            new AscentTime(),
            new AvgAscentRate(),
            new AvgDescentRate(),
            new MaxAscentRate(),
            new MaxDescentRate(),
            new HangTime(),
        );
    }

    /**
     * @return FieldInterface[]
     */
    public function getFields(): iterable
    {
        /** @var FieldInterface[] $properties */
        $properties = get_object_vars($this);

        foreach ($properties as $field) {
            yield $field->getDefinitionNumber() => $field;
        }
    }
}
