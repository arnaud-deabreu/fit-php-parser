<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Records\Generated;

use FitParser\Records\Generated\WorkoutStep\CustomTargetValueHigh;
use FitParser\Records\Generated\WorkoutStep\CustomTargetValueLow;
use FitParser\Records\Generated\WorkoutStep\DurationType;
use FitParser\Records\Generated\WorkoutStep\DurationValue;
use FitParser\Records\Generated\WorkoutStep\Equipment;
use FitParser\Records\Generated\WorkoutStep\ExerciseCategory;
use FitParser\Records\Generated\WorkoutStep\ExerciseName;
use FitParser\Records\Generated\WorkoutStep\ExerciseWeight;
use FitParser\Records\Generated\WorkoutStep\Intensity;
use FitParser\Records\Generated\WorkoutStep\MessageIndex;
use FitParser\Records\Generated\WorkoutStep\Notes;
use FitParser\Records\Generated\WorkoutStep\SecondaryCustomTargetValueHigh;
use FitParser\Records\Generated\WorkoutStep\SecondaryCustomTargetValueLow;
use FitParser\Records\Generated\WorkoutStep\SecondaryTargetType;
use FitParser\Records\Generated\WorkoutStep\SecondaryTargetValue;
use FitParser\Records\Generated\WorkoutStep\TargetType;
use FitParser\Records\Generated\WorkoutStep\TargetValue;
use FitParser\Records\Generated\WorkoutStep\WeightDisplayUnit;
use FitParser\Records\Generated\WorkoutStep\WktStepName;
use FitParser\Records\RecordInterface;
use FitParser\Records\UnknownValue;
use FitParser\Records\ValueInterface;

final class WorkoutStep implements RecordInterface
{
    /** @var ValueInterface[] */
    private array $values;

    public function addValue(ValueInterface $value): void
    {
        if (false === \in_array($value::class, [
            MessageIndex::class,
            WktStepName::class,
            DurationType::class,
            DurationValue::class,
            TargetType::class,
            TargetValue::class,
            CustomTargetValueLow::class,
            CustomTargetValueHigh::class,
            Intensity::class,
            Notes::class,
            Equipment::class,
            ExerciseCategory::class,
            ExerciseName::class,
            ExerciseWeight::class,
            WeightDisplayUnit::class,
            SecondaryTargetType::class,
            SecondaryTargetValue::class,
            SecondaryCustomTargetValueLow::class,
            SecondaryCustomTargetValueHigh::class,
            UnknownValue::class,
        ], true)) {
            throw new \InvalidArgumentException(
                \sprintf('%s is not an expected value for this record.', $value::class)
            );
        }

        $this->values[] = $value;
    }

    /**
     * @return ValueInterface[]
     */
    public function getValues(): array
    {
        return $this->values;
    }
}
