<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Records\Generated;

use FitParser\Records\Generated\Connectivity\AntEnabled;
use FitParser\Records\Generated\Connectivity\AutoActivityUploadEnabled;
use FitParser\Records\Generated\Connectivity\BluetoothEnabled;
use FitParser\Records\Generated\Connectivity\BluetoothLeEnabled;
use FitParser\Records\Generated\Connectivity\CourseDownloadEnabled;
use FitParser\Records\Generated\Connectivity\GpsEphemerisDownloadEnabled;
use FitParser\Records\Generated\Connectivity\GrouptrackEnabled;
use FitParser\Records\Generated\Connectivity\IncidentDetectionEnabled;
use FitParser\Records\Generated\Connectivity\LiveTrackingEnabled;
use FitParser\Records\Generated\Connectivity\Name;
use FitParser\Records\Generated\Connectivity\WeatherAlertsEnabled;
use FitParser\Records\Generated\Connectivity\WeatherConditionsEnabled;
use FitParser\Records\Generated\Connectivity\WorkoutDownloadEnabled;
use FitParser\Records\RecordInterface;
use FitParser\Records\UnknownValue;
use FitParser\Records\ValueInterface;

final class Connectivity implements RecordInterface
{
    /** @var ValueInterface[] */
    private array $values;

    public function addValue(ValueInterface $value): void
    {
        if (false === \in_array($value::class, [
            BluetoothEnabled::class,
            BluetoothLeEnabled::class,
            AntEnabled::class,
            Name::class,
            LiveTrackingEnabled::class,
            WeatherConditionsEnabled::class,
            WeatherAlertsEnabled::class,
            AutoActivityUploadEnabled::class,
            CourseDownloadEnabled::class,
            WorkoutDownloadEnabled::class,
            GpsEphemerisDownloadEnabled::class,
            IncidentDetectionEnabled::class,
            GrouptrackEnabled::class,
            UnknownValue::class,
        ], true)) {
            throw new \InvalidArgumentException(
                \sprintf('%s is not an expected value for this record.', $value::class)
            );
        }

        $this->values[] = $value;
    }

    /**
     * @return ValueInterface[]
     */
    public function getValues(): array
    {
        return $this->values;
    }
}
