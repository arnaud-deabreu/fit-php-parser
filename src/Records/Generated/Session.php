<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Records\Generated;

use FitParser\Records\Generated\Session\AvgAltitude;
use FitParser\Records\Generated\Session\AvgBallSpeed;
use FitParser\Records\Generated\Session\AvgCadence;
use FitParser\Records\Generated\Session\AvgCadencePosition;
use FitParser\Records\Generated\Session\AvgCombinedPedalSmoothness;
use FitParser\Records\Generated\Session\AvgCoreTemperature;
use FitParser\Records\Generated\Session\AvgDepth;
use FitParser\Records\Generated\Session\AvgFlow;
use FitParser\Records\Generated\Session\AvgFractionalCadence;
use FitParser\Records\Generated\Session\AvgGrade;
use FitParser\Records\Generated\Session\AvgGrit;
use FitParser\Records\Generated\Session\AvgHeartRate;
use FitParser\Records\Generated\Session\AvgLapTime;
use FitParser\Records\Generated\Session\AvgLeftPco;
use FitParser\Records\Generated\Session\AvgLeftPedalSmoothness;
use FitParser\Records\Generated\Session\AvgLeftPowerPhase;
use FitParser\Records\Generated\Session\AvgLeftPowerPhasePeak;
use FitParser\Records\Generated\Session\AvgLeftTorqueEffectiveness;
use FitParser\Records\Generated\Session\AvgLevMotorPower;
use FitParser\Records\Generated\Session\AvgNegGrade;
use FitParser\Records\Generated\Session\AvgNegVerticalSpeed;
use FitParser\Records\Generated\Session\AvgPosGrade;
use FitParser\Records\Generated\Session\AvgPosVerticalSpeed;
use FitParser\Records\Generated\Session\AvgPower;
use FitParser\Records\Generated\Session\AvgPowerPosition;
use FitParser\Records\Generated\Session\AvgRespirationRate;
use FitParser\Records\Generated\Session\AvgRightPco;
use FitParser\Records\Generated\Session\AvgRightPedalSmoothness;
use FitParser\Records\Generated\Session\AvgRightPowerPhase;
use FitParser\Records\Generated\Session\AvgRightPowerPhasePeak;
use FitParser\Records\Generated\Session\AvgRightTorqueEffectiveness;
use FitParser\Records\Generated\Session\AvgSaturatedHemoglobinPercent;
use FitParser\Records\Generated\Session\AvgSpeed;
use FitParser\Records\Generated\Session\AvgSpo2;
use FitParser\Records\Generated\Session\AvgStanceTime;
use FitParser\Records\Generated\Session\AvgStanceTimeBalance;
use FitParser\Records\Generated\Session\AvgStanceTimePercent;
use FitParser\Records\Generated\Session\AvgStepLength;
use FitParser\Records\Generated\Session\AvgStress;
use FitParser\Records\Generated\Session\AvgStrokeCount;
use FitParser\Records\Generated\Session\AvgStrokeDistance;
use FitParser\Records\Generated\Session\AvgTemperature;
use FitParser\Records\Generated\Session\AvgTotalHemoglobinConc;
use FitParser\Records\Generated\Session\AvgVam;
use FitParser\Records\Generated\Session\AvgVerticalOscillation;
use FitParser\Records\Generated\Session\AvgVerticalRatio;
use FitParser\Records\Generated\Session\BestLapIndex;
use FitParser\Records\Generated\Session\DiveNumber;
use FitParser\Records\Generated\Session\EndCns;
use FitParser\Records\Generated\Session\EndN2;
use FitParser\Records\Generated\Session\EndPositionLat;
use FitParser\Records\Generated\Session\EndPositionLong;
use FitParser\Records\Generated\Session\EnhancedAvgAltitude;
use FitParser\Records\Generated\Session\EnhancedAvgRespirationRate;
use FitParser\Records\Generated\Session\EnhancedAvgSpeed;
use FitParser\Records\Generated\Session\EnhancedMaxAltitude;
use FitParser\Records\Generated\Session\EnhancedMaxRespirationRate;
use FitParser\Records\Generated\Session\EnhancedMaxSpeed;
use FitParser\Records\Generated\Session\EnhancedMinAltitude;
use FitParser\Records\Generated\Session\EnhancedMinRespirationRate;
use FitParser\Records\Generated\Session\Event;
use FitParser\Records\Generated\Session\EventGroup;
use FitParser\Records\Generated\Session\EventType;
use FitParser\Records\Generated\Session\FirstLapIndex;
use FitParser\Records\Generated\Session\GpsAccuracy;
use FitParser\Records\Generated\Session\IntensityFactor;
use FitParser\Records\Generated\Session\JumpCount;
use FitParser\Records\Generated\Session\LeftRightBalance;
use FitParser\Records\Generated\Session\LevBatteryConsumption;
use FitParser\Records\Generated\Session\MaxAltitude;
use FitParser\Records\Generated\Session\MaxBallSpeed;
use FitParser\Records\Generated\Session\MaxCadence;
use FitParser\Records\Generated\Session\MaxCadencePosition;
use FitParser\Records\Generated\Session\MaxCoreTemperature;
use FitParser\Records\Generated\Session\MaxDepth;
use FitParser\Records\Generated\Session\MaxFractionalCadence;
use FitParser\Records\Generated\Session\MaxHeartRate;
use FitParser\Records\Generated\Session\MaxLevMotorPower;
use FitParser\Records\Generated\Session\MaxNegGrade;
use FitParser\Records\Generated\Session\MaxNegVerticalSpeed;
use FitParser\Records\Generated\Session\MaxPosGrade;
use FitParser\Records\Generated\Session\MaxPosVerticalSpeed;
use FitParser\Records\Generated\Session\MaxPower;
use FitParser\Records\Generated\Session\MaxPowerPosition;
use FitParser\Records\Generated\Session\MaxRespirationRate;
use FitParser\Records\Generated\Session\MaxSaturatedHemoglobinPercent;
use FitParser\Records\Generated\Session\MaxSpeed;
use FitParser\Records\Generated\Session\MaxTemperature;
use FitParser\Records\Generated\Session\MaxTotalHemoglobinConc;
use FitParser\Records\Generated\Session\MessageIndex;
use FitParser\Records\Generated\Session\MinAltitude;
use FitParser\Records\Generated\Session\MinCoreTemperature;
use FitParser\Records\Generated\Session\MinHeartRate;
use FitParser\Records\Generated\Session\MinRespirationRate;
use FitParser\Records\Generated\Session\MinSaturatedHemoglobinPercent;
use FitParser\Records\Generated\Session\MinTemperature;
use FitParser\Records\Generated\Session\MinTotalHemoglobinConc;
use FitParser\Records\Generated\Session\NecLat;
use FitParser\Records\Generated\Session\NecLong;
use FitParser\Records\Generated\Session\NormalizedPower;
use FitParser\Records\Generated\Session\NumActiveLengths;
use FitParser\Records\Generated\Session\NumLaps;
use FitParser\Records\Generated\Session\NumLengths;
use FitParser\Records\Generated\Session\O2Toxicity;
use FitParser\Records\Generated\Session\OpponentName;
use FitParser\Records\Generated\Session\OpponentScore;
use FitParser\Records\Generated\Session\PlayerScore;
use FitParser\Records\Generated\Session\PoolLength;
use FitParser\Records\Generated\Session\PoolLengthUnit;
use FitParser\Records\Generated\Session\RmssdHrv;
use FitParser\Records\Generated\Session\SdrrHrv;
use FitParser\Records\Generated\Session\Sport;
use FitParser\Records\Generated\Session\SportIndex;
use FitParser\Records\Generated\Session\SportProfileName;
use FitParser\Records\Generated\Session\StandCount;
use FitParser\Records\Generated\Session\StartCns;
use FitParser\Records\Generated\Session\StartN2;
use FitParser\Records\Generated\Session\StartPositionLat;
use FitParser\Records\Generated\Session\StartPositionLong;
use FitParser\Records\Generated\Session\StartTime;
use FitParser\Records\Generated\Session\StrokeCount;
use FitParser\Records\Generated\Session\SubSport;
use FitParser\Records\Generated\Session\SurfaceInterval;
use FitParser\Records\Generated\Session\SwcLat;
use FitParser\Records\Generated\Session\SwcLong;
use FitParser\Records\Generated\Session\SwimStroke;
use FitParser\Records\Generated\Session\ThresholdPower;
use FitParser\Records\Generated\Session\TimeInCadenceZone;
use FitParser\Records\Generated\Session\TimeInHrZone;
use FitParser\Records\Generated\Session\TimeInPowerZone;
use FitParser\Records\Generated\Session\TimeInSpeedZone;
use FitParser\Records\Generated\Session\Timestamp;
use FitParser\Records\Generated\Session\TimeStanding;
use FitParser\Records\Generated\Session\TotalAnaerobicTrainingEffect;
use FitParser\Records\Generated\Session\TotalAscent;
use FitParser\Records\Generated\Session\TotalCalories;
use FitParser\Records\Generated\Session\TotalCycles;
use FitParser\Records\Generated\Session\TotalDescent;
use FitParser\Records\Generated\Session\TotalDistance;
use FitParser\Records\Generated\Session\TotalElapsedTime;
use FitParser\Records\Generated\Session\TotalFatCalories;
use FitParser\Records\Generated\Session\TotalFlow;
use FitParser\Records\Generated\Session\TotalFractionalAscent;
use FitParser\Records\Generated\Session\TotalFractionalCycles;
use FitParser\Records\Generated\Session\TotalFractionalDescent;
use FitParser\Records\Generated\Session\TotalGrit;
use FitParser\Records\Generated\Session\TotalMovingTime;
use FitParser\Records\Generated\Session\TotalTimerTime;
use FitParser\Records\Generated\Session\TotalTrainingEffect;
use FitParser\Records\Generated\Session\TotalWork;
use FitParser\Records\Generated\Session\TrainingLoadPeak;
use FitParser\Records\Generated\Session\TrainingStressScore;
use FitParser\Records\Generated\Session\Trigger;
use FitParser\Records\Generated\Session\WorkoutFeel;
use FitParser\Records\Generated\Session\WorkoutRpe;
use FitParser\Records\Generated\Session\ZoneCount;
use FitParser\Records\RecordInterface;
use FitParser\Records\UnknownValue;
use FitParser\Records\ValueInterface;

final class Session implements RecordInterface
{
    /** @var ValueInterface[] */
    private array $values;

    public function addValue(ValueInterface $value): void
    {
        if (false === \in_array($value::class, [
            MessageIndex::class,
            Timestamp::class,
            Event::class,
            EventType::class,
            StartTime::class,
            StartPositionLat::class,
            StartPositionLong::class,
            Sport::class,
            SubSport::class,
            TotalElapsedTime::class,
            TotalTimerTime::class,
            TotalDistance::class,
            TotalCycles::class,
            TotalCalories::class,
            TotalFatCalories::class,
            AvgSpeed::class,
            MaxSpeed::class,
            AvgHeartRate::class,
            MaxHeartRate::class,
            AvgCadence::class,
            MaxCadence::class,
            AvgPower::class,
            MaxPower::class,
            TotalAscent::class,
            TotalDescent::class,
            TotalTrainingEffect::class,
            FirstLapIndex::class,
            NumLaps::class,
            EventGroup::class,
            Trigger::class,
            NecLat::class,
            NecLong::class,
            SwcLat::class,
            SwcLong::class,
            NumLengths::class,
            NormalizedPower::class,
            TrainingStressScore::class,
            IntensityFactor::class,
            LeftRightBalance::class,
            EndPositionLat::class,
            EndPositionLong::class,
            AvgStrokeCount::class,
            AvgStrokeDistance::class,
            SwimStroke::class,
            PoolLength::class,
            ThresholdPower::class,
            PoolLengthUnit::class,
            NumActiveLengths::class,
            TotalWork::class,
            AvgAltitude::class,
            MaxAltitude::class,
            GpsAccuracy::class,
            AvgGrade::class,
            AvgPosGrade::class,
            AvgNegGrade::class,
            MaxPosGrade::class,
            MaxNegGrade::class,
            AvgTemperature::class,
            MaxTemperature::class,
            TotalMovingTime::class,
            AvgPosVerticalSpeed::class,
            AvgNegVerticalSpeed::class,
            MaxPosVerticalSpeed::class,
            MaxNegVerticalSpeed::class,
            MinHeartRate::class,
            TimeInHrZone::class,
            TimeInSpeedZone::class,
            TimeInCadenceZone::class,
            TimeInPowerZone::class,
            AvgLapTime::class,
            BestLapIndex::class,
            MinAltitude::class,
            PlayerScore::class,
            OpponentScore::class,
            OpponentName::class,
            StrokeCount::class,
            ZoneCount::class,
            MaxBallSpeed::class,
            AvgBallSpeed::class,
            AvgVerticalOscillation::class,
            AvgStanceTimePercent::class,
            AvgStanceTime::class,
            AvgFractionalCadence::class,
            MaxFractionalCadence::class,
            TotalFractionalCycles::class,
            AvgTotalHemoglobinConc::class,
            MinTotalHemoglobinConc::class,
            MaxTotalHemoglobinConc::class,
            AvgSaturatedHemoglobinPercent::class,
            MinSaturatedHemoglobinPercent::class,
            MaxSaturatedHemoglobinPercent::class,
            AvgLeftTorqueEffectiveness::class,
            AvgRightTorqueEffectiveness::class,
            AvgLeftPedalSmoothness::class,
            AvgRightPedalSmoothness::class,
            AvgCombinedPedalSmoothness::class,
            SportProfileName::class,
            SportIndex::class,
            TimeStanding::class,
            StandCount::class,
            AvgLeftPco::class,
            AvgRightPco::class,
            AvgLeftPowerPhase::class,
            AvgLeftPowerPhasePeak::class,
            AvgRightPowerPhase::class,
            AvgRightPowerPhasePeak::class,
            AvgPowerPosition::class,
            MaxPowerPosition::class,
            AvgCadencePosition::class,
            MaxCadencePosition::class,
            EnhancedAvgSpeed::class,
            EnhancedMaxSpeed::class,
            EnhancedAvgAltitude::class,
            EnhancedMinAltitude::class,
            EnhancedMaxAltitude::class,
            AvgLevMotorPower::class,
            MaxLevMotorPower::class,
            LevBatteryConsumption::class,
            AvgVerticalRatio::class,
            AvgStanceTimeBalance::class,
            AvgStepLength::class,
            TotalAnaerobicTrainingEffect::class,
            AvgVam::class,
            AvgDepth::class,
            MaxDepth::class,
            SurfaceInterval::class,
            StartCns::class,
            EndCns::class,
            StartN2::class,
            EndN2::class,
            AvgRespirationRate::class,
            MaxRespirationRate::class,
            MinRespirationRate::class,
            MinTemperature::class,
            O2Toxicity::class,
            DiveNumber::class,
            TrainingLoadPeak::class,
            EnhancedAvgRespirationRate::class,
            EnhancedMaxRespirationRate::class,
            EnhancedMinRespirationRate::class,
            TotalGrit::class,
            TotalFlow::class,
            JumpCount::class,
            AvgGrit::class,
            AvgFlow::class,
            WorkoutFeel::class,
            WorkoutRpe::class,
            AvgSpo2::class,
            AvgStress::class,
            SdrrHrv::class,
            RmssdHrv::class,
            TotalFractionalAscent::class,
            TotalFractionalDescent::class,
            AvgCoreTemperature::class,
            MinCoreTemperature::class,
            MaxCoreTemperature::class,
            UnknownValue::class,
        ], true)) {
            throw new \InvalidArgumentException(
                \sprintf('%s is not an expected value for this record.', $value::class)
            );
        }

        $this->values[] = $value;
    }

    /**
     * @return ValueInterface[]
     */
    public function getValues(): array
    {
        return $this->values;
    }
}
