<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Records\Generated;

use FitParser\Records\Generated\BikeProfile\AutoPowerZero;
use FitParser\Records\Generated\BikeProfile\AutoWheelCal;
use FitParser\Records\Generated\BikeProfile\AutoWheelsize;
use FitParser\Records\Generated\BikeProfile\BikeCadAntId;
use FitParser\Records\Generated\BikeProfile\BikeCadAntIdTransType;
use FitParser\Records\Generated\BikeProfile\BikePowerAntId;
use FitParser\Records\Generated\BikeProfile\BikePowerAntIdTransType;
use FitParser\Records\Generated\BikeProfile\BikeSpdAntId;
use FitParser\Records\Generated\BikeProfile\BikeSpdAntIdTransType;
use FitParser\Records\Generated\BikeProfile\BikeSpdcadAntId;
use FitParser\Records\Generated\BikeProfile\BikeSpdcadAntIdTransType;
use FitParser\Records\Generated\BikeProfile\BikeWeight;
use FitParser\Records\Generated\BikeProfile\CadEnabled;
use FitParser\Records\Generated\BikeProfile\CrankLength;
use FitParser\Records\Generated\BikeProfile\CustomWheelsize;
use FitParser\Records\Generated\BikeProfile\Enabled;
use FitParser\Records\Generated\BikeProfile\FrontGear;
use FitParser\Records\Generated\BikeProfile\FrontGearNum;
use FitParser\Records\Generated\BikeProfile\Id;
use FitParser\Records\Generated\BikeProfile\MessageIndex;
use FitParser\Records\Generated\BikeProfile\Name;
use FitParser\Records\Generated\BikeProfile\Odometer;
use FitParser\Records\Generated\BikeProfile\OdometerRollover;
use FitParser\Records\Generated\BikeProfile\PowerCalFactor;
use FitParser\Records\Generated\BikeProfile\PowerEnabled;
use FitParser\Records\Generated\BikeProfile\RearGear;
use FitParser\Records\Generated\BikeProfile\RearGearNum;
use FitParser\Records\Generated\BikeProfile\ShimanoDi2Enabled;
use FitParser\Records\Generated\BikeProfile\SpdcadEnabled;
use FitParser\Records\Generated\BikeProfile\SpdEnabled;
use FitParser\Records\Generated\BikeProfile\Sport;
use FitParser\Records\Generated\BikeProfile\SubSport;
use FitParser\Records\RecordInterface;
use FitParser\Records\UnknownValue;
use FitParser\Records\ValueInterface;

final class BikeProfile implements RecordInterface
{
    /** @var ValueInterface[] */
    private array $values;

    public function addValue(ValueInterface $value): void
    {
        if (false === \in_array($value::class, [
            MessageIndex::class,
            Name::class,
            Sport::class,
            SubSport::class,
            Odometer::class,
            BikeSpdAntId::class,
            BikeCadAntId::class,
            BikeSpdcadAntId::class,
            BikePowerAntId::class,
            CustomWheelsize::class,
            AutoWheelsize::class,
            BikeWeight::class,
            PowerCalFactor::class,
            AutoWheelCal::class,
            AutoPowerZero::class,
            Id::class,
            SpdEnabled::class,
            CadEnabled::class,
            SpdcadEnabled::class,
            PowerEnabled::class,
            CrankLength::class,
            Enabled::class,
            BikeSpdAntIdTransType::class,
            BikeCadAntIdTransType::class,
            BikeSpdcadAntIdTransType::class,
            BikePowerAntIdTransType::class,
            OdometerRollover::class,
            FrontGearNum::class,
            FrontGear::class,
            RearGearNum::class,
            RearGear::class,
            ShimanoDi2Enabled::class,
            UnknownValue::class,
        ], true)) {
            throw new \InvalidArgumentException(
                \sprintf('%s is not an expected value for this record.', $value::class)
            );
        }

        $this->values[] = $value;
    }

    /**
     * @return ValueInterface[]
     */
    public function getValues(): array
    {
        return $this->values;
    }
}
