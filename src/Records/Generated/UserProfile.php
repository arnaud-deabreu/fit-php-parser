<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Records\Generated;

use FitParser\Records\Generated\UserProfile\ActivityClass;
use FitParser\Records\Generated\UserProfile\Age;
use FitParser\Records\Generated\UserProfile\DefaultMaxBikingHeartRate;
use FitParser\Records\Generated\UserProfile\DefaultMaxHeartRate;
use FitParser\Records\Generated\UserProfile\DefaultMaxRunningHeartRate;
use FitParser\Records\Generated\UserProfile\DepthSetting;
use FitParser\Records\Generated\UserProfile\DistSetting;
use FitParser\Records\Generated\UserProfile\DiveCount;
use FitParser\Records\Generated\UserProfile\ElevSetting;
use FitParser\Records\Generated\UserProfile\FriendlyName;
use FitParser\Records\Generated\UserProfile\Gender;
use FitParser\Records\Generated\UserProfile\GlobalId;
use FitParser\Records\Generated\UserProfile\Height;
use FitParser\Records\Generated\UserProfile\HeightSetting;
use FitParser\Records\Generated\UserProfile\HrSetting;
use FitParser\Records\Generated\UserProfile\Language;
use FitParser\Records\Generated\UserProfile\LocalId;
use FitParser\Records\Generated\UserProfile\MessageIndex;
use FitParser\Records\Generated\UserProfile\PositionSetting;
use FitParser\Records\Generated\UserProfile\PowerSetting;
use FitParser\Records\Generated\UserProfile\RestingHeartRate;
use FitParser\Records\Generated\UserProfile\SleepTime;
use FitParser\Records\Generated\UserProfile\SpeedSetting;
use FitParser\Records\Generated\UserProfile\TemperatureSetting;
use FitParser\Records\Generated\UserProfile\UserRunningStepLength;
use FitParser\Records\Generated\UserProfile\UserWalkingStepLength;
use FitParser\Records\Generated\UserProfile\WakeTime;
use FitParser\Records\Generated\UserProfile\Weight;
use FitParser\Records\Generated\UserProfile\WeightSetting;
use FitParser\Records\RecordInterface;
use FitParser\Records\UnknownValue;
use FitParser\Records\ValueInterface;

final class UserProfile implements RecordInterface
{
    /** @var ValueInterface[] */
    private array $values;

    public function addValue(ValueInterface $value): void
    {
        if (false === \in_array($value::class, [
            MessageIndex::class,
            FriendlyName::class,
            Gender::class,
            Age::class,
            Height::class,
            Weight::class,
            Language::class,
            ElevSetting::class,
            WeightSetting::class,
            RestingHeartRate::class,
            DefaultMaxRunningHeartRate::class,
            DefaultMaxBikingHeartRate::class,
            DefaultMaxHeartRate::class,
            HrSetting::class,
            SpeedSetting::class,
            DistSetting::class,
            PowerSetting::class,
            ActivityClass::class,
            PositionSetting::class,
            TemperatureSetting::class,
            LocalId::class,
            GlobalId::class,
            WakeTime::class,
            SleepTime::class,
            HeightSetting::class,
            UserRunningStepLength::class,
            UserWalkingStepLength::class,
            DepthSetting::class,
            DiveCount::class,
            UnknownValue::class,
        ], true)) {
            throw new \InvalidArgumentException(
                \sprintf('%s is not an expected value for this record.', $value::class)
            );
        }

        $this->values[] = $value;
    }

    /**
     * @return ValueInterface[]
     */
    public function getValues(): array
    {
        return $this->values;
    }
}
