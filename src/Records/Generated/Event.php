<?php

/**
 * Do not edit this file: it is auto-generated from the fit-parser-generate-profile command.
 */

declare(strict_types=1);

namespace FitParser\Records\Generated;

use FitParser\Records\Generated\Event\ActivityType;
use FitParser\Records\Generated\Event\Data;
use FitParser\Records\Generated\Event\Data16;
use FitParser\Records\Generated\Event\DeviceIndex;
use FitParser\Records\Generated\Event\Event as Event1;
use FitParser\Records\Generated\Event\EventGroup;
use FitParser\Records\Generated\Event\EventType;
use FitParser\Records\Generated\Event\FrontGear;
use FitParser\Records\Generated\Event\FrontGearNum;
use FitParser\Records\Generated\Event\OpponentScore;
use FitParser\Records\Generated\Event\RadarThreatAvgApproachSpeed;
use FitParser\Records\Generated\Event\RadarThreatCount;
use FitParser\Records\Generated\Event\RadarThreatLevelMax;
use FitParser\Records\Generated\Event\RadarThreatMaxApproachSpeed;
use FitParser\Records\Generated\Event\RearGear;
use FitParser\Records\Generated\Event\RearGearNum;
use FitParser\Records\Generated\Event\Score;
use FitParser\Records\Generated\Event\StartTimestamp;
use FitParser\Records\Generated\Event\Timestamp;
use FitParser\Records\RecordInterface;
use FitParser\Records\UnknownValue;
use FitParser\Records\ValueInterface;

final class Event implements RecordInterface
{
    /** @var ValueInterface[] */
    private array $values;

    public function addValue(ValueInterface $value): void
    {
        if (false === \in_array($value::class, [
            Timestamp::class,
            Event1::class,
            EventType::class,
            Data16::class,
            Data::class,
            EventGroup::class,
            Score::class,
            OpponentScore::class,
            FrontGearNum::class,
            FrontGear::class,
            RearGearNum::class,
            RearGear::class,
            DeviceIndex::class,
            ActivityType::class,
            StartTimestamp::class,
            RadarThreatLevelMax::class,
            RadarThreatCount::class,
            RadarThreatAvgApproachSpeed::class,
            RadarThreatMaxApproachSpeed::class,
            UnknownValue::class,
        ], true)) {
            throw new \InvalidArgumentException(
                \sprintf('%s is not an expected value for this record.', $value::class)
            );
        }

        $this->values[] = $value;
    }

    /**
     * @return ValueInterface[]
     */
    public function getValues(): array
    {
        return $this->values;
    }
}
